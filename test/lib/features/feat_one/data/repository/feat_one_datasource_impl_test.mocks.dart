// Mocks generated by Mockito 5.4.2 from annotations
// in app_1_clean/test/lib/features/feat_one/data/repository/feat_one_datasource_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:app_1_clean/features/feat_one/data/datasource/feat_one_datasource.dart'
    as _i3;
import 'package:app_1_clean/features/feat_one/data/models/fetch_data_test_model.dart'
    as _i2;
import 'package:app_1_clean/features/feat_one/data/models/request_data_model.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFetchDataTestModel_0 extends _i1.SmartFake
    implements _i2.FetchDataTestModel {
  _FakeFetchDataTestModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FeatOneDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFeatOneDatasource extends _i1.Mock implements _i3.FeatOneDatasource {
  MockFeatOneDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.FetchDataTestModel> getFeatOne(
          {required _i5.RequestDataModel? requestBody}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFeatOne,
          [],
          {#requestBody: requestBody},
        ),
        returnValue:
            _i4.Future<_i2.FetchDataTestModel>.value(_FakeFetchDataTestModel_0(
          this,
          Invocation.method(
            #getFeatOne,
            [],
            {#requestBody: requestBody},
          ),
        )),
      ) as _i4.Future<_i2.FetchDataTestModel>);
}
